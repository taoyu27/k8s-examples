知识准备：
创建StatefulSet之前需准备的资源，而且对创建顺序有严格要求，创建顺序如下：
1、Volume
2、Persistent Volume
3、Persistent Volume Claim
4、Service
5、StatefulSet
本案例Volume基于ceph RBD来创建。

zookeeper是一种典型的有状态集群服务。考虑到在集群异常或重启时，需保证每一个实例挂载的数据卷仍然是之前的数据卷，本案例采用S
atefulSet进行发布。
场景说明：
    本案例部署3个zookeeper实例组成一个zookeeper集群。

前提：
   1.k8s集群环境运行正常；
   2.下载zookeeper镜像：docker pull hub.chinacloud.com/common/kubernetes-zookeeper:1.0-3.4.10
   3. 底层创建数据卷
   3.1 nfs文件系统（默认）             需为每个zookeeper节点建立一个专用的数据目录，比如例子中使用nfs目录为：/home/nfs/zk/{zkcluster1,zkcluster2,zkcluster3}，其中/home/nfs为nfs主目录，zk为zookeeper特定创建的目录（选择，建议创建），zkcluster1为第一个节点目录，zkcluster2为第二个节点目录，zkcluster3为第三个节点目录。
   文件夹赋权限：chmod -R 777 /home/nfs/zk/

   3.2 ceph分布式文件系统（backup-pv）
   第一步：更新pv yaml文件(使用rbd pv yaml替换 nfs pv yaml)
   cd /opt/example_kubernetes/catalog/zookeeper
   mv zookeeper_nfs_pv.yaml backup-pv/
   cp backup-pv/secrets.yaml ./
   cp backup-pv/zookeeper_ceph_pv.yaml ./   
   第二步：创建数据卷
   创建3个rbd块，为zookeeper实例存放持久化数据使用
   rbd create --size 50G kube/zookeeper-01 --image-feature layering
   rbd create --size 50G kube/zookeeper-02 --image-feature layering
   rbd create --size 50G kube/zookeeper-03 --image-feature layering

部署步骤：
    a.创建3个PersistentVolume
	nfs文件系统：
    命令：kubectl create -f zookeeper_nfs_pv.yaml	
	ceph分布式文件系统：
    命令：kubectl create -f secrets.yaml
	      kubectl create -f zookeeper_ceph_pv.yaml

    b.创建3个PersistentVolumeCliam
    命令：kubectl create -f zookeeper_ceph_pvc.yaml

    c.创建zookeeper集群
    命令：kubectl create -f zookeeper.yaml
	
检查与使用：
kubectl get pod,pv,pvc,svc -o wide
NAME                                  READY     STATUS    RESTARTS   AGE       IP            NODE
po/zookeeper-0                        1/1       Running   0          15m       10.244.2.94   node1.chinacloud.com
po/zookeeper-1                        1/1       Running   0          15m       10.244.0.80   master.chinacloud.com
po/zookeeper-2                        1/1       Running   0          15m       10.244.1.51   node2.chinacloud.com

NAME                     CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS    CLAIM                         STORAGECLASS   REASON    AGE
pv/datadir-zookeeper-0   50Gi       RWO            Recycle          Bound     default/datadir-zookeeper-0                            52m
pv/datadir-zookeeper-1   50Gi       RWO            Recycle          Bound     default/datadir-zookeeper-1                            52m
pv/datadir-zookeeper-2   50Gi       RWO            Recycle          Bound     default/datadir-zookeeper-2                            52m

NAME                      STATUS    VOLUME                CAPACITY   ACCESS MODES   STORAGECLASS   AGE
pvc/datadir-zookeeper-0   Bound     datadir-zookeeper-0   50Gi       RWO                           52m
pvc/datadir-zookeeper-1   Bound     datadir-zookeeper-1   50Gi       RWO                           52m
pvc/datadir-zookeeper-2   Bound     datadir-zookeeper-2   50Gi       RWO                           52m

NAME           TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)             AGE
zookeeper-cs   NodePort    10.3.0.204   <none>        2181:30890/TCP      16m
zookeeper-hs   ClusterIP   None         <none>        2888/TCP,3888/TCP   16m

集群配置：
kubectl exec zookeeper-0 cat /opt/zookeeper/conf/zoo.cfg
#This file was autogenerated DO NOT EDIT
clientPort=2181
dataDir=/var/lib/zookeeper/data
dataLogDir=/var/lib/zookeeper/data/log
tickTime=2000
initLimit=10
syncLimit=5
maxClientCnxns=60
minSessionTimeout=4000
maxSessionTimeout=40000
autopurge.snapRetainCount=3
autopurge.purgeInteval=12
server.1=zookeeper-0.zookeeper-hs.default.svc.cluster.local:2888:3888
server.2=zookeeper-1.zookeeper-hs.default.svc.cluster.local:2888:3888
server.3=zookeeper-2.zookeeper-hs.default.svc.cluster.local:2888:3888

使用方式（8c24是zookeeper容器id，出现Welcome to ZooKeeper!则表示集群创建成功。）：
docker exec 8c24 /opt/zookeeper/bin/zkCli.sh -server zookeeper-cs:2181
Connecting to zookeeper-cs:2181
2018-01-13 05:55:03,509 [myid:] - INFO  [main:Environment@100] - Client environment:zookeeper.version=3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT
2018-01-13 05:55:03,513 [myid:] - INFO  [main:Environment@100] - Client environment:host.name=zookeeper-1.zookeeper-hs.default.svc.cluster.local
2018-01-13 05:55:03,514 [myid:] - INFO  [main:Environment@100] - Client environment:java.version=1.8.0_131
2018-01-13 05:55:03,516 [myid:] - INFO  [main:Environment@100] - Client environment:java.vendor=Oracle Corporation
2018-01-13 05:55:03,516 [myid:] - INFO  [main:Environment@100] - Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre
2018-01-13 05:55:03,517 [myid:] - INFO  [main:Environment@100] - Client environment:java.class.path=/opt/zookeeper/bin/../build/classes:/opt/zookeeper/bin/../build/lib/*.jar:/opt/zookeeper/bin/../lib/slf4j-log4j12-1.6.1.jar:/opt/zookeeper/bin/../lib/slf4j-api-1.6.1.jar:/opt/zookeeper/bin/../lib/netty-3.10.5.Final.jar:/opt/zookeeper/bin/../lib/log4j-1.2.16.jar:/opt/zookeeper/bin/../lib/jline-0.9.94.jar:/opt/zookeeper/bin/../zookeeper-3.4.10.jar:/opt/zookeeper/bin/../src/java/lib/*.jar:/opt/zookeeper/bin/../conf:
2018-01-13 05:55:03,517 [myid:] - INFO  [main:Environment@100] - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib
2018-01-13 05:55:03,517 [myid:] - INFO  [main:Environment@100] - Client environment:java.io.tmpdir=/tmp
2018-01-13 05:55:03,517 [myid:] - INFO  [main:Environment@100] - Client environment:java.compiler=<NA>
2018-01-13 05:55:03,517 [myid:] - INFO  [main:Environment@100] - Client environment:os.name=Linux
2018-01-13 05:55:03,517 [myid:] - INFO  [main:Environment@100] - Client environment:os.arch=amd64
2018-01-13 05:55:03,517 [myid:] - INFO  [main:Environment@100] - Client environment:os.version=3.10.0-327.el7.x86_64
2018-01-13 05:55:03,518 [myid:] - INFO  [main:Environment@100] - Client environment:user.name=zookeeper
2018-01-13 05:55:03,518 [myid:] - INFO  [main:Environment@100] - Client environment:user.home=/home/zookeeper
2018-01-13 05:55:03,518 [myid:] - INFO  [main:Environment@100] - Client environment:user.dir=/
2018-01-13 05:55:03,519 [myid:] - INFO  [main:ZooKeeper@438] - Initiating client connection, connectString=zookeeper-cs:2181 sessionTimeout=30000 watcher=org.apache.zookeeper.ZooKeeperMain$MyWatcher@22d8cfe0
Welcome to ZooKeeper!
JLine support is enabled
2018-01-13 05:55:03,557 [myid:] - INFO  [main-SendThread(zookeeper-cs.default.svc.cluster.local:2181):ClientCnxn$SendThread@1032] - Opening socket connection to server zookeeper-cs.default.svc.cluster.local/10.3.0.204:2181. Will not attempt to authenticate using SASL (unknown error)
2018-01-13 05:55:03,656 [myid:] - INFO  [main-SendThread(zookeeper-cs.default.svc.cluster.local:2181):ClientCnxn$SendThread@876] - Socket connection established to zookeeper-cs.default.svc.cluster.local/10.3.0.204:2181, initiating session
2018-01-13 05:55:03,673 [myid:] - INFO  [main-SendThread(zookeeper-cs.default.svc.cluster.local:2181):ClientCnxn$SendThread@1299] - Session establishment complete on server zookeeper-cs.default.svc.cluster.local/10.3.0.204:2181, sessionid = 0x360edf106f40003, negotiated timeout = 30000

WATCHER::

WatchedEvent state:SyncConnected type:None path:null

参考链接：https://github.com/Yolean/kubernetes-kafka

